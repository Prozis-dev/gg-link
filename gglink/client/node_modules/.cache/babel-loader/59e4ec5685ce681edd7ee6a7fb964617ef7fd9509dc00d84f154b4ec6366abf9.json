{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heado\\\\OneDrive\\\\Desktop\\\\GGlink2.9\\\\gglink\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Dashboard.css'; // Crie este CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n  const [welcomeMessage, setWelcomeMessage] = useState('Carregando...');\n  useEffect(() => {\n    // Verificar se o token existe no localStorage\n    const token = localStorage.getItem('gglink_token');\n    if (!token) {\n      navigate('/login'); // Redireciona para login se não houver token\n      return;\n    }\n\n    // Em uma aplicação real, você faria uma requisição para uma API protegida\n    // para obter os dados do usuário usando o token para validação.\n    // Por enquanto, apenas um placeholder:\n    setWelcomeMessage('Bem-vindo(a) ao Dashboard do GGLink! Você está logado(a).');\n  }, [navigate]);\n  const handleLogout = () => {\n    localStorage.removeItem('gglink_token'); // Remove o token\n    navigate('/login'); // Redireciona para a página de login\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dashboard do GGLink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: welcomeMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aqui voc\\xEA poder\\xE1 ver suas partidas, comunidades e interagir com outros gamers.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-logout\",\n        onClick: handleLogout,\n        children: \"Sair\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"SF23zgi6KpRgUyWeq9y2fgDTK3E=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","navigate","welcomeMessage","setWelcomeMessage","token","localStorage","getItem","handleLogout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/heado/OneDrive/Desktop/GGlink2.9/gglink/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Dashboard.css'; // Crie este CSS\r\n\r\nfunction Dashboard() {\r\n  const navigate = useNavigate();\r\n  const [welcomeMessage, setWelcomeMessage] = useState('Carregando...');\r\n\r\n  useEffect(() => {\r\n    // Verificar se o token existe no localStorage\r\n    const token = localStorage.getItem('gglink_token');\r\n    if (!token) {\r\n      navigate('/login'); // Redireciona para login se não houver token\r\n      return;\r\n    }\r\n\r\n    // Em uma aplicação real, você faria uma requisição para uma API protegida\r\n    // para obter os dados do usuário usando o token para validação.\r\n    // Por enquanto, apenas um placeholder:\r\n    setWelcomeMessage('Bem-vindo(a) ao Dashboard do GGLink! Você está logado(a).');\r\n\r\n  }, [navigate]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('gglink_token'); // Remove o token\r\n    navigate('/login'); // Redireciona para a página de login\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"dashboard-content\">\r\n        <h2>Dashboard do GGLink</h2>\r\n        <p>{welcomeMessage}</p>\r\n        <p>Aqui você poderá ver suas partidas, comunidades e interagir com outros gamers.</p>\r\n        <button className=\"btn-logout\" onClick={handleLogout}>Sair</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,eAAe,CAAC;EAErED,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,IAAI,CAACF,KAAK,EAAE;MACVH,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACpB;IACF;;IAEA;IACA;IACA;IACAE,iBAAiB,CAAC,2DAA2D,CAAC;EAEhF,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzBF,YAAY,CAACG,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;IACzCP,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACEH,OAAA;IAAKW,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClCZ,OAAA;MAAKW,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCZ,OAAA;QAAAY,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BhB,OAAA;QAAAY,QAAA,EAAIR;MAAc;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBhB,OAAA;QAAAY,QAAA,EAAG;MAA8E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACrFhB,OAAA;QAAQW,SAAS,EAAC,YAAY;QAACM,OAAO,EAAER,YAAa;QAAAG,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CAlCQD,SAAS;EAAA,QACCH,WAAW;AAAA;AAAAoB,EAAA,GADrBjB,SAAS;AAoClB,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}