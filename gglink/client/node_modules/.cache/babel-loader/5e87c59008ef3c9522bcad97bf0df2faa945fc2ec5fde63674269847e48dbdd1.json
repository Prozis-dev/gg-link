{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heado\\\\OneDrive\\\\Desktop\\\\GGlink2.9\\\\gglink\\\\client\\\\src\\\\pages\\\\LobbyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport '../styles/LobbyPage.css'; // Vamos criar este CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = 'http://localhost:5000'; // Endereço do seu backend Socket.IO\n\nfunction LobbyPage() {\n  _s();\n  const {\n    id: lobbyId\n  } = useParams(); // Pega o ID do lobby da URL\n  const navigate = useNavigate();\n  const [lobbyDetails, setLobbyDetails] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [currentPlayers, setCurrentPlayers] = useState([]); // Lista de integrantes\n  const messagesEndRef = useRef(null); // Ref para scroll automático\n  const socketRef = useRef(null); // Ref para a instância do socket\n\n  // Função para rolar o chat para o final\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('gglink_token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    // 1. Conectar ao Socket.IO com o token\n    socketRef.current = io(ENDPOINT, {\n      auth: {\n        token: token\n      }\n    });\n\n    // Eventos do Socket.IO\n    socketRef.current.on('connect', () => {\n      console.log('Conectado ao Socket.IO!');\n      socketRef.current.emit('joinLobby', lobbyId); // Entra na sala do lobby\n    });\n    socketRef.current.on('connect_error', error => {\n      console.error('Erro de conexão Socket.IO:', error.message);\n      alert('Não foi possível conectar ao chat. Tente novamente mais tarde.');\n      navigate('/dashboard'); // Redireciona em caso de erro de conexão\n    });\n    socketRef.current.on('receiveMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    socketRef.current.on('userJoinedLobby', data => {\n      console.log(data.message);\n      setMessages(prevMessages => [...prevMessages, {\n        username: 'Sistema',\n        message: data.message,\n        timestamp: new Date().toISOString()\n      }]);\n      // Refresque a lista de jogadores (você precisará de um endpoint ou emitir lista completa)\n      fetchLobbyDetails(); // Atualiza a lista de players\n    });\n    socketRef.current.on('userLeftLobby', data => {\n      console.log(data.message);\n      setMessages(prevMessages => [...prevMessages, {\n        username: 'Sistema',\n        message: data.message,\n        timestamp: new Date().toISOString()\n      }]);\n      // Refresque a lista de jogadores\n      fetchLobbyDetails(); // Atualiza a lista de players\n    });\n    socketRef.current.on('lobbyClosed', data => {\n      alert(`Lobby ${data.lobbyName} foi fechado pelo criador.`);\n      navigate('/dashboard'); // Redireciona para o dashboard\n    });\n    socketRef.current.on('lobbyError', errorMsg => {\n      console.error('Erro do lobby via Socket:', errorMsg);\n      alert(`Erro no lobby: ${errorMsg}`);\n    });\n\n    // 2. Buscar detalhes do lobby via API REST\n    const fetchLobbyDetails = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/lobbies?_id=${lobbyId}`, {\n          // Buscar por ID\n          headers: {\n            'x-auth-token': token\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          if (data.length > 0) {\n            setLobbyDetails(data[0]);\n            setCurrentPlayers(data[0].currentPlayers); // Inicializa a lista de players\n          } else {\n            alert('Lobby não encontrado ou você não tem acesso.');\n            navigate('/dashboard');\n          }\n        } else {\n          console.error('Falha ao buscar detalhes do lobby:', response.statusText);\n          alert('Não foi possível carregar os detalhes do lobby.');\n          navigate('/dashboard');\n        }\n      } catch (error) {\n        console.error('Erro de rede ao buscar detalhes do lobby:', error);\n        alert('Erro de conexão ao carregar lobby.');\n        navigate('/dashboard');\n      }\n    };\n    fetchLobbyDetails();\n\n    // Limpeza ao desmontar o componente\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.emit('leaveLobby', lobbyId); // Avisa ao servidor que está saindo\n        socketRef.current.disconnect();\n      }\n    };\n  }, [lobbyId, navigate]); // Dependências: lobbyId para re-executar se o lobby mudar, navigate para redirecionar\n\n  // Rola para o final do chat sempre que novas mensagens chegam\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (messageInput.trim() && socketRef.current && socketRef.current.connected) {\n      socketRef.current.emit('sendMessage', {\n        lobbyId,\n        message: messageInput\n      });\n      setMessageInput('');\n    }\n  };\n  const handleLeaveLobby = async () => {\n    if (!window.confirm('Tem certeza que deseja sair deste lobby?')) {\n      return;\n    }\n    const token = localStorage.getItem('gglink_token');\n    if (!token) return;\n    try {\n      const response = await fetch(`http://localhost:5000/api/lobbies/${lobbyId}/leave`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-auth-token': token\n        }\n      });\n      if (response.ok) {\n        alert('Você saiu do lobby!');\n        if (socketRef.current) {\n          socketRef.current.emit('leaveLobby', lobbyId); // Notifica o socket\n          socketRef.current.disconnect();\n        }\n        navigate('/dashboard');\n      } else {\n        const errorData = await response.json();\n        alert(`Erro ao sair do lobby: ${errorData.msg}`);\n      }\n    } catch (error) {\n      console.error('Erro de rede ao sair do lobby:', error);\n      alert('Erro de conexão ao tentar sair do lobby.');\n    }\n  };\n  const handleCloseLobby = async () => {\n    if (!window.confirm('Tem certeza que deseja fechar este lobby? Essa ação é irreversível.')) {\n      return;\n    }\n    const token = localStorage.getItem('gglink_token');\n    if (!token) return;\n    try {\n      const response = await fetch(`http://localhost:5000/api/lobbies/${lobbyId}`, {\n        method: 'DELETE',\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      if (response.ok) {\n        alert('Lobby fechado com sucesso!');\n        if (socketRef.current) {\n          // Emitir evento para todos os usuários do lobby avisando do fechamento\n          socketRef.current.emit('lobbyClosed', {\n            lobbyId,\n            lobbyName: lobbyDetails === null || lobbyDetails === void 0 ? void 0 : lobbyDetails.name\n          });\n          socketRef.current.disconnect();\n        }\n        navigate('/dashboard');\n      } else {\n        const errorData = await response.json();\n        alert(`Erro ao fechar lobby: ${errorData.msg}`);\n      }\n    } catch (error) {\n      console.error('Erro de rede ao fechar lobby:', error);\n      alert('Erro de conexão ao tentar fechar o lobby.');\n    }\n  };\n  if (!lobbyDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lobby-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando lobby...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Obter o ID do usuário logado para verificar se é o criador\n  const currentUserId = localStorage.getItem('gglink_token') ? JSON.parse(atob(localStorage.getItem('gglink_token').split('.')[1])).user.id : null;\n  const isOwner = lobbyDetails.owner._id === currentUserId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lobby-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"lobby-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"lobby-title\",\n          children: [lobbyDetails.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"game-name\",\n            children: [\"(\", lobbyDetails.game, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 59\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"owner-info\",\n          children: [\"Criado por: \", lobbyDetails.owner.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"lobby-main-content container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat do Lobby\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message ${msg.userId === currentUserId ? 'own-message' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-sender\",\n              children: [msg.username, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-text\",\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-timestamp\",\n              children: [\" \", new Date(msg.timestamp).toLocaleTimeString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendMessage,\n          className: \"chat-input-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Digite sua mensagem...\",\n            value: messageInput,\n            onChange: e => setMessageInput(e.target.value),\n            \"aria-label\": \"Campo de mensagem do chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn-send-message\",\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lobby-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"players-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Integrantes (\", currentPlayers.length, \"/\", lobbyDetails.maxPlayers, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: currentPlayers.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [player.username, \" \", player._id === lobbyDetails.owner._id && '(Criador)']\n            }, player._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lobby-actions-sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-leave-lobby\",\n            onClick: handleLeaveLobby,\n            children: \"Sair do Lobby\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), isOwner && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-close-lobby\",\n            onClick: handleCloseLobby,\n            children: \"Fechar Lobby\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA9 2025 GGLink. Todos os direitos reservados.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n_s(LobbyPage, \"+5K2Hj0GCMahEJ8aKgL2Hrlw5w8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = LobbyPage;\nexport default LobbyPage;\nvar _c;\n$RefreshReg$(_c, \"LobbyPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","io","jsxDEV","_jsxDEV","ENDPOINT","LobbyPage","_s","id","lobbyId","navigate","lobbyDetails","setLobbyDetails","messages","setMessages","messageInput","setMessageInput","currentPlayers","setCurrentPlayers","messagesEndRef","socketRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","token","localStorage","getItem","auth","on","console","log","emit","error","message","alert","prevMessages","data","username","timestamp","Date","toISOString","fetchLobbyDetails","lobbyName","errorMsg","response","fetch","headers","ok","json","length","statusText","disconnect","handleSendMessage","e","preventDefault","trim","connected","handleLeaveLobby","window","confirm","method","errorData","msg","handleCloseLobby","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentUserId","JSON","parse","atob","split","user","isOwner","owner","_id","game","map","index","userId","toLocaleTimeString","ref","onSubmit","type","placeholder","value","onChange","target","maxPlayers","player","onClick","_c","$RefreshReg$"],"sources":["C:/Users/heado/OneDrive/Desktop/GGlink2.9/gglink/client/src/pages/LobbyPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport '../styles/LobbyPage.css'; // Vamos criar este CSS\r\n\r\nconst ENDPOINT = 'http://localhost:5000'; // Endereço do seu backend Socket.IO\r\n\r\nfunction LobbyPage() {\r\n  const { id: lobbyId } = useParams(); // Pega o ID do lobby da URL\r\n  const navigate = useNavigate();\r\n  const [lobbyDetails, setLobbyDetails] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [messageInput, setMessageInput] = useState('');\r\n  const [currentPlayers, setCurrentPlayers] = useState([]); // Lista de integrantes\r\n  const messagesEndRef = useRef(null); // Ref para scroll automático\r\n  const socketRef = useRef(null); // Ref para a instância do socket\r\n\r\n  // Função para rolar o chat para o final\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('gglink_token');\r\n    if (!token) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    // 1. Conectar ao Socket.IO com o token\r\n    socketRef.current = io(ENDPOINT, {\r\n      auth: {\r\n        token: token\r\n      }\r\n    });\r\n\r\n    // Eventos do Socket.IO\r\n    socketRef.current.on('connect', () => {\r\n      console.log('Conectado ao Socket.IO!');\r\n      socketRef.current.emit('joinLobby', lobbyId); // Entra na sala do lobby\r\n    });\r\n\r\n    socketRef.current.on('connect_error', (error) => {\r\n      console.error('Erro de conexão Socket.IO:', error.message);\r\n      alert('Não foi possível conectar ao chat. Tente novamente mais tarde.');\r\n      navigate('/dashboard'); // Redireciona em caso de erro de conexão\r\n    });\r\n\r\n    socketRef.current.on('receiveMessage', (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    socketRef.current.on('userJoinedLobby', (data) => {\r\n      console.log(data.message);\r\n      setMessages((prevMessages) => [...prevMessages, {\r\n        username: 'Sistema',\r\n        message: data.message,\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n      // Refresque a lista de jogadores (você precisará de um endpoint ou emitir lista completa)\r\n      fetchLobbyDetails(); // Atualiza a lista de players\r\n    });\r\n\r\n    socketRef.current.on('userLeftLobby', (data) => {\r\n      console.log(data.message);\r\n      setMessages((prevMessages) => [...prevMessages, {\r\n        username: 'Sistema',\r\n        message: data.message,\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n      // Refresque a lista de jogadores\r\n      fetchLobbyDetails(); // Atualiza a lista de players\r\n    });\r\n\r\n    socketRef.current.on('lobbyClosed', (data) => {\r\n      alert(`Lobby ${data.lobbyName} foi fechado pelo criador.`);\r\n      navigate('/dashboard'); // Redireciona para o dashboard\r\n    });\r\n\r\n    socketRef.current.on('lobbyError', (errorMsg) => {\r\n      console.error('Erro do lobby via Socket:', errorMsg);\r\n      alert(`Erro no lobby: ${errorMsg}`);\r\n    });\r\n\r\n    // 2. Buscar detalhes do lobby via API REST\r\n    const fetchLobbyDetails = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/lobbies?_id=${lobbyId}`, { // Buscar por ID\r\n          headers: {\r\n            'x-auth-token': token,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (data.length > 0) {\r\n            setLobbyDetails(data[0]);\r\n            setCurrentPlayers(data[0].currentPlayers); // Inicializa a lista de players\r\n          } else {\r\n            alert('Lobby não encontrado ou você não tem acesso.');\r\n            navigate('/dashboard');\r\n          }\r\n        } else {\r\n          console.error('Falha ao buscar detalhes do lobby:', response.statusText);\r\n          alert('Não foi possível carregar os detalhes do lobby.');\r\n          navigate('/dashboard');\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro de rede ao buscar detalhes do lobby:', error);\r\n        alert('Erro de conexão ao carregar lobby.');\r\n        navigate('/dashboard');\r\n      }\r\n    };\r\n\r\n    fetchLobbyDetails();\r\n\r\n    // Limpeza ao desmontar o componente\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.emit('leaveLobby', lobbyId); // Avisa ao servidor que está saindo\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, [lobbyId, navigate]); // Dependências: lobbyId para re-executar se o lobby mudar, navigate para redirecionar\r\n\r\n  // Rola para o final do chat sempre que novas mensagens chegam\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (messageInput.trim() && socketRef.current && socketRef.current.connected) {\r\n      socketRef.current.emit('sendMessage', { lobbyId, message: messageInput });\r\n      setMessageInput('');\r\n    }\r\n  };\r\n\r\n  const handleLeaveLobby = async () => {\r\n    if (!window.confirm('Tem certeza que deseja sair deste lobby?')) {\r\n      return;\r\n    }\r\n\r\n    const token = localStorage.getItem('gglink_token');\r\n    if (!token) return;\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/lobbies/${lobbyId}/leave`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': token,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Você saiu do lobby!');\r\n        if (socketRef.current) {\r\n          socketRef.current.emit('leaveLobby', lobbyId); // Notifica o socket\r\n          socketRef.current.disconnect();\r\n        }\r\n        navigate('/dashboard');\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Erro ao sair do lobby: ${errorData.msg}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro de rede ao sair do lobby:', error);\r\n      alert('Erro de conexão ao tentar sair do lobby.');\r\n    }\r\n  };\r\n\r\n  const handleCloseLobby = async () => {\r\n    if (!window.confirm('Tem certeza que deseja fechar este lobby? Essa ação é irreversível.')) {\r\n      return;\r\n    }\r\n\r\n    const token = localStorage.getItem('gglink_token');\r\n    if (!token) return;\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/lobbies/${lobbyId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'x-auth-token': token,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Lobby fechado com sucesso!');\r\n        if (socketRef.current) {\r\n          // Emitir evento para todos os usuários do lobby avisando do fechamento\r\n          socketRef.current.emit('lobbyClosed', { lobbyId, lobbyName: lobbyDetails?.name });\r\n          socketRef.current.disconnect();\r\n        }\r\n        navigate('/dashboard');\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Erro ao fechar lobby: ${errorData.msg}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro de rede ao fechar lobby:', error);\r\n      alert('Erro de conexão ao tentar fechar o lobby.');\r\n    }\r\n  };\r\n\r\n  if (!lobbyDetails) {\r\n    return (\r\n      <div className=\"lobby-loading\">\r\n        <p>Carregando lobby...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Obter o ID do usuário logado para verificar se é o criador\r\n  const currentUserId = localStorage.getItem('gglink_token') ?\r\n    JSON.parse(atob(localStorage.getItem('gglink_token').split('.')[1])).user.id : null;\r\n  const isOwner = lobbyDetails.owner._id === currentUserId;\r\n\r\n  return (\r\n    <div className=\"lobby-page-container\">\r\n      <header className=\"lobby-header\">\r\n        <div className=\"container\">\r\n          <h2 className=\"lobby-title\">{lobbyDetails.name} <span className=\"game-name\">({lobbyDetails.game})</span></h2>\r\n          <span className=\"owner-info\">Criado por: {lobbyDetails.owner.username}</span>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"lobby-main-content container\">\r\n        <div className=\"chat-section\">\r\n          <h3>Chat do Lobby</h3>\r\n          <div className=\"chat-messages\">\r\n            {messages.map((msg, index) => (\r\n              <div key={index} className={`chat-message ${msg.userId === currentUserId ? 'own-message' : ''}`}>\r\n                <span className=\"message-sender\">{msg.username}: </span>\r\n                <span className=\"message-text\">{msg.message}</span>\r\n                <span className=\"message-timestamp\"> {new Date(msg.timestamp).toLocaleTimeString()}</span>\r\n              </div>\r\n            ))}\r\n            <div ref={messagesEndRef} /> {/* Para scroll automático */}\r\n          </div>\r\n          <form onSubmit={handleSendMessage} className=\"chat-input-form\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Digite sua mensagem...\"\r\n              value={messageInput}\r\n              onChange={(e) => setMessageInput(e.target.value)}\r\n              aria-label=\"Campo de mensagem do chat\"\r\n            />\r\n            <button type=\"submit\" className=\"btn-send-message\">Enviar</button>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"lobby-sidebar\">\r\n          <div className=\"players-list\">\r\n            <h3>Integrantes ({currentPlayers.length}/{lobbyDetails.maxPlayers})</h3>\r\n            <ul>\r\n              {currentPlayers.map(player => (\r\n                <li key={player._id}>{player.username} {player._id === lobbyDetails.owner._id && '(Criador)'}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"lobby-actions-sidebar\">\r\n            <button className=\"btn-leave-lobby\" onClick={handleLeaveLobby}>Sair do Lobby</button>\r\n            {isOwner && (\r\n              <button className=\"btn-close-lobby\" onClick={handleCloseLobby}>Fechar Lobby</button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n\r\n      <footer className=\"footer\">\r\n        <div className=\"container\">\r\n          <p>&copy; 2025 GGLink. Todos os direitos reservados.</p>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LobbyPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}