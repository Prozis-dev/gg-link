{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heado\\\\OneDrive\\\\Desktop\\\\GGlink2.9\\\\gglink\\\\client\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../styles/Auth.css'; // Vamos criar este CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState(''); // 'success' ou 'error'\n  const navigate = useNavigate();\n  const {\n    username,\n    email,\n    password,\n    confirmPassword\n  } = formData;\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validação básica do frontend\n    if (!username || !email || !password || !confirmPassword) {\n      setMessage('Todos os campos são obrigatórios.');\n      setMessageType('error');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setMessage('As senhas não coincidem.');\n      setMessageType('error');\n      return;\n    }\n    if (password.length < 6) {\n      setMessage('A senha deve ter pelo menos 6 caracteres.');\n      setMessageType('error');\n      return;\n    }\n    const emailRegex = /.+@.+\\..+/;\n    if (!emailRegex.test(email)) {\n      setMessage('Por favor, insira um e-mail válido.');\n      setMessageType('error');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(data.msg || 'Cadastro realizado com sucesso!');\n        setMessageType('success');\n        // Você pode armazenar o token JWT no localStorage aqui\n        localStorage.setItem('gglink_token', data.token);\n        // Redirecionar para a página de login ou dashboard\n        setTimeout(() => {\n          navigate('/login'); // Ou para o dashboard após o login automático\n        }, 1500);\n      } else {\n        setMessage(data.msg || 'Erro ao cadastrar.');\n        setMessageType('error');\n      }\n    } catch (error) {\n      console.error('Erro de rede:', error);\n      setMessage('Erro de conexão. Tente novamente mais tarde.');\n      setMessageType('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastre-se no GGLink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${messageType}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Nome de Usu\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: username,\n          onChange: handleChange,\n          required: true,\n          \"aria-label\": \"Nome de usu\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: handleChange,\n          required: true,\n          \"aria-label\": \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: handleChange,\n          required: true,\n          \"aria-label\": \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirmar Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: handleChange,\n          required: true,\n          \"aria-label\": \"Confirmar Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-auth\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-footer\",\n        children: [\"J\\xE1 tem uma conta? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Fa\\xE7a Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"zXEUFFeOg26oPL6i7wm2YIdqNBE=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","username","email","password","confirmPassword","message","setMessage","messageType","setMessageType","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","length","emailRegex","test","response","fetch","method","headers","body","JSON","stringify","data","json","ok","msg","localStorage","setItem","token","setTimeout","error","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","required","to","_c","$RefreshReg$"],"sources":["C:/Users/heado/OneDrive/Desktop/GGlink2.9/gglink/client/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../styles/Auth.css'; // Vamos criar este CSS\r\n\r\nfunction Register() {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState(''); // 'success' ou 'error'\r\n  const navigate = useNavigate();\r\n\r\n  const { username, email, password, confirmPassword } = formData;\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validação básica do frontend\r\n    if (!username || !email || !password || !confirmPassword) {\r\n      setMessage('Todos os campos são obrigatórios.');\r\n      setMessageType('error');\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      setMessage('As senhas não coincidem.');\r\n      setMessageType('error');\r\n      return;\r\n    }\r\n    if (password.length < 6) {\r\n      setMessage('A senha deve ter pelo menos 6 caracteres.');\r\n      setMessageType('error');\r\n      return;\r\n    }\r\n    const emailRegex = /.+@.+\\..+/;\r\n    if (!emailRegex.test(email)) {\r\n      setMessage('Por favor, insira um e-mail válido.');\r\n      setMessageType('error');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessage(data.msg || 'Cadastro realizado com sucesso!');\r\n        setMessageType('success');\r\n        // Você pode armazenar o token JWT no localStorage aqui\r\n        localStorage.setItem('gglink_token', data.token);\r\n        // Redirecionar para a página de login ou dashboard\r\n        setTimeout(() => {\r\n          navigate('/login'); // Ou para o dashboard após o login automático\r\n        }, 1500);\r\n      } else {\r\n        setMessage(data.msg || 'Erro ao cadastrar.');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro de rede:', error);\r\n      setMessage('Erro de conexão. Tente novamente mais tarde.');\r\n      setMessageType('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n        <h2>Cadastre-se no GGLink</h2>\r\n        {message && <div className={`message ${messageType}`}>{message}</div>}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Nome de Usuário</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            name=\"username\"\r\n            value={username}\r\n            onChange={handleChange}\r\n            required\r\n            aria-label=\"Nome de usuário\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            required\r\n            aria-label=\"Email\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Senha</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            required\r\n            aria-label=\"Senha\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmPassword\">Confirmar Senha</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            onChange={handleChange}\r\n            required\r\n            aria-label=\"Confirmar Senha\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn-auth\">Cadastrar</button>\r\n        <p className=\"auth-footer\">Já tem uma conta? <Link to=\"/login\">Faça Login</Link></p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}