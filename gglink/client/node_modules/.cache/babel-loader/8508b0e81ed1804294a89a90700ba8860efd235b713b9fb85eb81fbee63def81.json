{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heado\\\\OneDrive\\\\Desktop\\\\GGlink2.9\\\\gglink\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../styles/Auth.css'; // Usaremos o mesmo CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [formData, setFormData] = useState({\n    identifier: '',\n    // Pode ser username ou email\n    password: ''\n  });\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState(''); // 'success' ou 'error'\n  const navigate = useNavigate();\n  const {\n    identifier,\n    password\n  } = formData;\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validação básica do frontend\n    if (!identifier || !password) {\n      setMessage('Todos os campos são obrigatórios.');\n      setMessageType('error');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          identifier,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(data.msg || 'Login realizado com sucesso!');\n        setMessageType('success');\n        // Armazenar o token JWT no localStorage\n        localStorage.setItem('gglink_token', data.token);\n        // Redirecionar para o dashboard ou página principal após o login\n        setTimeout(() => {\n          navigate('/dashboard'); // Vamos criar esta rota depois\n        }, 1500);\n      } else {\n        setMessage(data.msg || 'Credenciais inválidas.');\n        setMessageType('error');\n      }\n    } catch (error) {\n      console.error('Erro de rede:', error);\n      setMessage('Erro de conexão. Tente novamente mais tarde.');\n      setMessageType('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login no GGLink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${messageType}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"identifier\",\n          children: \"Nome de Usu\\xE1rio ou Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"identifier\",\n          name: \"identifier\",\n          value: identifier,\n          onChange: handleChange,\n          required: true,\n          \"aria-label\": \"Nome de usu\\xE1rio ou email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: handleChange,\n          required: true,\n          \"aria-label\": \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-auth\",\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-footer\",\n        children: [\"N\\xE3o tem uma conta? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Cadastre-se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"t3pQ9/h7apVz8kADtjrlVhRXJ+0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","identifier","password","message","setMessage","messageType","setMessageType","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","msg","localStorage","setItem","token","setTimeout","error","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","required","to","_c","$RefreshReg$"],"sources":["C:/Users/heado/OneDrive/Desktop/GGlink2.9/gglink/client/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../styles/Auth.css'; // Usaremos o mesmo CSS\r\n\r\nfunction Login() {\r\n  const [formData, setFormData] = useState({\r\n    identifier: '', // Pode ser username ou email\r\n    password: ''\r\n  });\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState(''); // 'success' ou 'error'\r\n  const navigate = useNavigate();\r\n\r\n  const { identifier, password } = formData;\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validação básica do frontend\r\n    if (!identifier || !password) {\r\n      setMessage('Todos os campos são obrigatórios.');\r\n      setMessageType('error');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ identifier, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessage(data.msg || 'Login realizado com sucesso!');\r\n        setMessageType('success');\r\n        // Armazenar o token JWT no localStorage\r\n        localStorage.setItem('gglink_token', data.token);\r\n        // Redirecionar para o dashboard ou página principal após o login\r\n        setTimeout(() => {\r\n          navigate('/dashboard'); // Vamos criar esta rota depois\r\n        }, 1500);\r\n      } else {\r\n        setMessage(data.msg || 'Credenciais inválidas.');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro de rede:', error);\r\n      setMessage('Erro de conexão. Tente novamente mais tarde.');\r\n      setMessageType('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n        <h2>Login no GGLink</h2>\r\n        {message && <div className={`message ${messageType}`}>{message}</div>}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"identifier\">Nome de Usuário ou Email</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"identifier\"\r\n            name=\"identifier\"\r\n            value={identifier}\r\n            onChange={handleChange}\r\n            required\r\n            aria-label=\"Nome de usuário ou email\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Senha</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            required\r\n            aria-label=\"Senha\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn-auth\">Entrar</button>\r\n        <p className=\"auth-footer\">Não tem uma conta? <Link to=\"/register\">Cadastre-se</Link></p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}